<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

  <display-name>Archetype Created Web Application</display-name>
  
  
	<!--启动一个watchdog线程每1800秒扫描一下log4j配置文件的变化 -->
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>1800000</param-value>
	</context-param>
	<!-- Spring的配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:com/sunny/renthouse/**/server/META-INF/spring.xml,/WEB-INF/spring.xml</param-value>
	</context-param>
	<!--log4j配置文件加载 -->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webApp.root</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/log4j.properties</param-value>
	</context-param>


	<!-- Spring监听器 -->
	<!-- 监听servletContext，启动contextConfigLocation中的spring配置信息 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!--spring log4j监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<filter>
		<filter-name>framework</filter-name>
		<filter-class>com.sunny.renthouse.module.filter.FrameworkFilter</filter-class>
		<init-param>
			<param-name>tactics</param-name>
			<param-value>REPLACE_FULLANGLE</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
		<init-param>
			<param-name>configProviders</param-name>
			<param-value>com.sunny.renthouse.module.base.struts.ModuleConfigProvider</param-value>
		</init-param>
	</filter>

	

	<!-- 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF8</param-value>
		</init-param>
	</filter>
	
		<!-- 没有登录的用户跳转到登录页 -->
	<filter>
		<filter-name>SessionFilter</filter-name>
		<filter-class>com.sunny.renthouse.module.filter.LoginSessionFilter</filter-class>
		 <init-param>
<!-- 对登录页面不进行过滤 -->
	        <param-name>logonStrings</param-name>
	        <param-value>login.jsp;login.action</param-value>
    	</init-param>
    	<init-param>
    		<param-name>redirectPath</param-name>
    		<param-value>/login.jsp</param-value>
    	</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<!-- SpringMVC配置 -->
<!-- 	<servlet> -->
<!-- 		<servlet-name>springmvc</servlet-name> -->
<!-- 		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> -->
<!-- 		<init-param> -->
<!-- 			<param-name>contextConfigLocation</param-name> -->
<!-- 			<param-value>classpath:spring-mvc.xml</param-value> -->
<!-- 		</init-param> -->
<!-- 		<load-on-startup>1</load-on-startup> -->
<!-- 	</servlet> -->
<!-- 	<servlet-mapping> -->
<!-- 		<servlet-name>springmvc</servlet-name> -->
<!-- 		<url-pattern>*.mvc</url-pattern> -->
<!-- 	</servlet-mapping> -->

	<!-- cxf起动 -->
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>/webservice/*</url-pattern>
	</filter-mapping>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/webservice/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
  
</web-app>
